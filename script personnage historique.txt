# Fichier : PersonnageHistorique.ps1

# Demander à l'utilisateur son personnage préféré
$personnage = Read-Host "Quel est votre personnage historique
préféré entre Caesar et Napoleon ?"

# Convertir la réponse en minuscules pour ignorer la casse
$personnageLowerCase = $personnage.ToLower()

# Vérifier la réponse et afficher l'image correspondante
if ($personnageLowerCase -eq "napoleon") {
	$imagePath = "C:\Users\User\Pictures\napoleon.jpg"
	# Vérifier si l'image existe
	if (Test-Path $imagePath) {
		# Ouvrir l'image avec l'application par défaut
		Invoke-Item $imagePath
		Write-Output "Voici l'image de Napoleon Bonaparte !"
		} 
	else {
		Write-Output "Image de Napoleon non trouvée à l'emplacement
		: $imagePath"
		Write-Output "  _   _                 _ "
		Write-Output " | \ | | __ _ _ __   __| | ___  ___  _ __ "
		Write-Output " | \| | / _' | '_ \ / _' |/ _ \/ _ \| '_ \ "
		Write-Output " | |\ |  (_| | |_) | (_| |  __/ (_) | | | |"
		Write-Output " |_| \_|\__,_| .__/ \__,_|\___|\___/|_| |_|"
		Write-Output "             |_| "
		}
	}

elseif ($personnageLowerCase -eq "caesar") {
	$imagePath = "C:\Users\User\Pictures\caesar.jpg"

	if (Test-Path $imagePath) {
		# Ouvrir l'image avec l'application par défaut
		Invoke-Item $imagePath
		Write-Output "Voici l'image de Jules César !"
		} 
	else {
		Write-Output "Image de Caesar non trouvée à l'emplacement :
		$imagePath"
		Write-Output "   _____ "
		Write-Output "  / ____| "
		Write-Output " | |     __ _  ___  ___  __ _ _ __ "
		Write-Output " | |    / _' |/ _ \/ __|/ _' | '__|"
		Write-Output " | |___| (_| |  __/\__ \ (_| | | "
		Write-Output "  \_____\__,_|\___||___/\__,_|_| "
		}
	}

elseif ($personnageLowerCase -eq "elio") {
	$imagePath = "C:\Users\User\Pictures\elio.jpg"
	if (Test-Path $imagePath) {
		Invoke-Item $imagePath
		Write-Output "Voici l'image secrète"
		}
	else {
		Write-Output "Image de Caesar non trouvée à l'emplacement :
		$imagePath"
		Write-Output "                              ##"
		Write-Output "                              ## "
		Write-Output "  ####     ####     #####    #####    ####    ######             ####     ### ##   ### ##"
		Write-Output " ##  ##       ##   ##         ##     ##  ##    ##  ##           ##  ##   ##  ##   ##  ##"
		Write-Output " ######    #####    #####     ##     ######    ##               ######   ##  ##   ##  ##"
		Write-Output " ##       ##  ##        ##    ## ##  ##        ##               ##        #####    #####"
		Write-Output "  #####    #####   ######      ###    #####   ####               #####       ##       ##"
		Write-Output "                                                                         #####    #####"
		}
	}

else {
	Write-Output "Personnage non reconnu. Veuillez choisir entre
	Caesar et Napoleon."
	}

# Attendre que l'utilisateur appuie sur une touche avant de fermer
Write-Output "`nAppuyez sur une touche pour continuer..."
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
